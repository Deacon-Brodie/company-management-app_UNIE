name: Veracode SAST + SCA

on: [push, pull_request]

jobs:
  veracode_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Instalar Veracode CLI
        run: |
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          ./veracode version

      - name: Ejecutar an√°lisis SAST
        env:
          VERACODE_API_KEY_ID: ${{ secrets.VERACODE_API_ID }}
          VERACODE_API_KEY_SECRET: ${{ secrets.VERACODE_API_KEY }}
        run: |
          echo $VERACODE_API_KEY_ID
          ./veracode scan --source . --type directory --format json --output sast-result.json
          echo "üìÑ Resultado SAST:"
          cat sast-result.json
          if jq -e '.findings[] | select(.severity=="CRITICAL")' sast-result.json; then
            echo "‚ùå Vulnerabilidades CR√çTICAS detectadas en SAST"
            exit 1
          else
            echo "‚úÖ SAST limpio de vulnerabilidades cr√≠ticas"
          fi


      - name: Ejecutar an√°lisis SCA (dependencias)
        env:
          VERACODE_API_KEY_ID: ${{ secrets.VERACODE_API_ID }}
          VERACODE_API_KEY_SECRET: ${{ secrets.VERACODE_API_KEY }}
        run: |
          ./veracode sbom --source . --format cyclonedx-json --output sbom.json
          ./veracode scan --type sca --source sbom.json --format json --output sca-result.json
          echo "üìÑ Resultado SCA:"
          cat sca-result.json
          if jq -e '.findings[] | select(.severity=="CRITICAL")' sca-result.json; then
            echo "‚ùå Vulnerabilidades CR√çTICAS detectadas en SCA"
            exit 1
          else
            echo "‚úÖ SCA limpio de vulnerabilidades cr√≠ticas"
          fi
